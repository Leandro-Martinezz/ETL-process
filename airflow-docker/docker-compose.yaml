services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: DogsDB
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy

  airflow-init:
    image: apache/airflow:2.7.3
    restart: on-failure
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@postgres/DogsDB
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW_UID: 1000 # Asegúrate de que este sea tu UID local
      PYTHONPATH: /opt/airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./src:/opt/airflow/src 
    command: >
      bash -c "
      for i in {1..10}; do
        if airflow db check; then
          airflow db init &&
          # Línea corregida: ahora todo el comando users create está en una sola línea lógica
          airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin &&
          echo 'Initialization complete' &&
          exit 0
        fi
        sleep 5
      done;
      echo 'Failed to initialize database'
      exit 1
      "
    depends_on:
      postgres:
        condition: service_healthy

  airflow-webserver:
    image: apache/airflow:2.7.3
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src 
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@postgres/DogsDB
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW_UID: 1000 
      PYTHONPATH: /opt/airflow
    command: webserver
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    image: apache/airflow:2.7.3
    restart: unless-stopped
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src # <-- Añade este volumen aquí también
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@postgres/DogsDB
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW_UID: 1000
      PYTHONPATH: /opt/airflow
    command: scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully

volumes:
  postgres_data: